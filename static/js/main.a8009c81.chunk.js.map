{"version":3,"sources":["firebaseApp.js","Header.js","DropDown.js","DisplaySelection.js","Footer.js","App.js","serviceWorker.js","Saveditemsdisplay.js","Saveditems.js","auth.js","ProtectedRoute.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Header","auth","useAuthState","user","id","className","to","style","marginRight","cursor","color","textDecoration","fontSize","borderRight","borderRightWidth","borderRightColor","borderRightStyle","onClick","signOut","then","localStorage","removeItem","console","log","catch","error","message","provider","GoogleAuthProvider","signInWithPopup","data","setItem","email","DropDown","userpicks","event","setState","userSelection","target","value","state","class","htmlFor","onChange","this","name","props","getProduct","Component","DisplaySection","items","map","displayItem","i","key","_id","src","image_link","alt","href","product_link","e","item","preventDefault","getItem","db","firestore","collection","doc","get","docSnapshot","exists","toast","set","username","Footer","App","userChoice","axios","url","method","responseType","result","currentProducts","getUserInput","Boolean","window","location","hostname","match","Saveditemsdisplay","deleteItem","refid","Saveditems","useState","setItems","deleted","setDeleted","useEffect","docs","where","querySnapshot","forEach","obj","Object","assign","push","delete","Date","ProtectedRoute","component","rest","render","checkAuthenticated","pathname","from","routing","exact","path","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8009c81.chunk.js","sourcesContent":["import firebase from 'firebase';\n//App's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD4iDNH_fPf65dmAGjFREQHQ_jHMCs1ZEw\",\n  authDomain: \"project5-16351.firebaseapp.com\",\n  databaseURL: \"https://project5-16351.firebaseio.com\",\n  projectId: \"project5-16351\",\n  storageBucket: \"project5-16351.appspot.com\",\n  messagingSenderId: \"188499920009\",\n  appId: \"1:188499920009:web:6c6332896151214c0ab258\",\n  measurementId: \"G-6F6HD55E6L\"\n\n};\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n export default firebase;","import React from 'react';\nimport GoogleButton from 'react-google-button'\nimport firebase from './firebaseApp';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { Link } from 'react-router-dom';\n\nimport {useAuthState} from 'react-firebase-hooks/auth';\n\n\n\n\n\n\nfunction Header() {\n\n  const auth = firebase.auth();\n\nconst [user]=useAuthState(auth);\n\n\n// sign in function with google\n\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider).then(data=>{\n      localStorage.setItem(\"email\",data.user.email)\n    \n\n    });\n  \n  }\n\n  const logOut = () => {\n    auth.signOut().then(()=> {\n      localStorage.removeItem(\"email\");\n      console.log('logged out')\n    }).catch((error) => {\n      console.log(error.message)\n    })\n  }\n\n\n\n\n  \n  \n  return (\n    <>\n    <header>\n      \n    <div id=\"menu\" className=\"menu\">\n\n    {user ?<> <Link to=\"/\" className=\"link\" style={{marginRight:\"8px\" ,cursor:\"pointer\",color: 'inherit', textDecoration: 'inherit',fontSize:\"20px\", borderRight: '1px solid black'}} >Home</Link><Link to=\"/saveditems\" className=\"link\" style={{cursor:\"pointer\",color: 'inherit', textDecoration: 'inherit',fontSize:\"20px\", borderRightWidth: '1px' , borderRightColor:'black', borderRightStyle:'solid'}} >SavedItems</Link> </>: \"\"}\n\n    {user ?<><button className=\"blue\" style={{cursor:\"pointer\"}} onClick={logOut}>Logout</button> </>: <GoogleButton\nonClick={ signInWithGoogle }\n/>}\n    \n\n    </div>\n   \n    <div className =\"wrapper\">\n      <div className=\"headerContainer\">\n        <h1>Makeup Finder.</h1>\n        <p>This website is designed to help you find makeup products.</p>\n      </div>\n    </div>\n\n  </header>\n\n \n  </>\n  )\n}\n\nexport default Header\n","import React, { Component } from 'react';\n\nclass DropDown extends Component {\n    constructor() {\n      super();\n      this.state = {\n        userSelection: \"\"\n      }\n    }\n  \n    userpicks = (event) => {\n      this.setState({\n        userSelection: event.target.value\n      })\n    }\n  \n    render() {\n      return(\n        <main>\n          <div class=\"wrapper\">\n            <form>\n              <div class=\"dropDownForm\">\n                <label htmlFor=\"makeupProduct\"></label>\n                <select onChange={ this.userpicks } name=\"makeupProduct\" id=\"makeupProduct\">\n                  <option className=\"options\" value=\"lipstick\">Lipstick</option>\n                  <option className=\"options\" value=\"eyeshadow\">EyeShadow</option>\n                  <option className=\"options\" value=\"blush\">Blush</option>\n                </select>\n                \n                <button class=\"submitButton\"\n                  onClick={ (event) => this.props.getProduct(event, this.state.userSelection) }\n                > Submit\n                </button>\n              </div>\n            </form>\n          </div>\n        </main>\n      )\n    }\n  }\n  \n  export default DropDown;","import React from 'react';\nimport firebase from './firebaseApp';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n//Used to display api function by getting the image and name of makeup product\nconst DisplaySection = (props ) => {\n\n\n  const onClick = (e,item) => {\n    e.preventDefault()\n\n    if(localStorage.getItem(\"email\"))\n    {\n      const db = firebase.firestore();\n      db.collection(\"saveditems\").doc(`doc-${item.id}`).get().then((docSnapshot) => {\n        if (docSnapshot.exists) {\n          toast(\"You already Have this Product Saved\");\n         \n        } else {\n          db.collection(\"saveditems\").doc(`doc-${item.id}`).set({...item,username:localStorage.getItem(\"email\")}).then(data=>{\n            toast(\"Product Saved\")\n          });\n         \n        }\n    });\n    }\n\n    else{\n      toast(\"Please Login To Save Product\")\n    }\n  \n   \n    \n\n\n   \n   \n    \n\n\n  }\n    return(\n      <section >\n         <ToastContainer />\n        <div className=\"imageDisplay\">\n        {\n        // maps runs through and display the different products with name and image\n          props.items.map((displayItem,i) => {\n            return(\n            <div className=\"wrapper\" key={i}>\n              <div key={displayItem._id} >\n                <div className=\"makeupItems\">\n                    <img src={displayItem.image_link} alt={displayItem.name}></img> \n                    <p>{displayItem.name}</p>    \n                    <a href={displayItem.product_link} style={{cursor:\"pointer\"}}>Buy Now</a>  \n                    <a href=\"/\" onClick={(e)=>onClick(e,displayItem)} style={{cursor:\"pointer\"}}>Save Item</a>        \n                </div>\n            </div>\n            </div>\n          );    \n        })\n      }\n      </div> \n    </section> \n  )\n}\n\n\nexport default DisplaySection;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n//Copyright information\n  render() {\n    return (\n      <footer>\n        <div class=\"wrapper\">\n        <p>Copyright Usra Abid © 2020</p>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nimport Header from './Header.js';\nimport DropDown from './DropDown'\nimport DisplaySection from './DisplaySelection.js'\nimport Footer from './Footer'\n\n\n\n\n\nclass App extends Component{\n  constructor() {\n    super()\n    this.state = {\n      currentProducts: [],\n    }\n  }\n//Making an Api call and putting userchoice to get different product types\n  getProduct = (event,userChoice) =>  {\n    event.preventDefault();\n      // run getProduct with userChoice as an argument \n    axios({ \n      url: `https://makeup-api.herokuapp.com/api/v1/products.json?product_type=${userChoice} `,\n      method: `GET`,\n      responseType: `json`\n    })\n    .then( (result) => {\n      this.setState({\n      //using the data from the api call into a state\n        currentProducts: result.data\n      }\n    );\n  })\n  }\n\n\n//Getting user input\n  getUserInput = (event) => {\n    event.preventDefault();\n  }\n\n//putting different components together \n  render(){\n      return (\n        <div className=\"App\">\n          \n          <Header />\n          <DropDown getProduct={ this.getProduct } / >\n          <DisplaySection items={this.state.currentProducts} />\n          <Footer/>\n        </div>\n      );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\n\nfunction Saveditemsdisplay(props) {\n    return (\n        <section >\n        <div className=\"imageDisplay\">\n        {\n        // maps runs through and display the different products with name and image\n          props.items.map((displayItem,i) => {\n            return(\n            <div className=\"wrapper\" key={i}>\n              <div key={displayItem._id} >\n                <div className=\"makeupItems\">\n                    <img src={displayItem.image_link} alt={displayItem.name}></img> \n                    <p>{displayItem.name}</p>    \n                    <a href={displayItem.product_link} style={{cursor:\"pointer\"}}>Buy Now</a>  \n\n                    <a onClick={()=>props.deleteItem(displayItem.refid)}  style={{cursor:\"pointer\"}}>Delete Item</a>  \n                   \n                </div>\n            </div>\n            </div>\n          );    \n        })\n      }\n      </div> \n    </section> \n    )\n}\n\nexport default Saveditemsdisplay\n","import React, { useState,useEffect } from 'react'\nimport Header from './Header.js';\nimport Footer from './Footer'\nimport Saveditemsdisplay from './Saveditemsdisplay.js';\nimport firebase from './firebaseApp';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction Saveditems() {\n\n    const [items,setItems]=useState([]);\n    const [deleted,setDeleted]=useState(\"\");\n    const db = firebase.firestore();\n    \n\n\n    useEffect(() => {\n        const docs=[]\n        db.collection(\"saveditems\").where('username', '==',localStorage.getItem(\"email\")).get().then((querySnapshot) => {\n\n            querySnapshot.forEach((doc) => {\n                let obj=doc.data();\n                Object.assign(obj, {refid: doc.id});\n                \n               \n                console.log(obj)\n              \n              \n               docs.push(obj);\n               \n             \n            });\n\n            setItems([...docs]);\n        });\n    }, [deleted,db])\n\n    const deleteItem=(id)=>{\n\n        db.collection('saveditems').doc(id).delete().then(data=>{\n            setDeleted(+ new Date());\n\n            \n\n            toast(\"Product Removed\");\n\n\n        });\n       \n\n\n    }\n\n    return (\n        <div className=\"App\">\n             <ToastContainer />\n        <Header />\n   <Saveditemsdisplay items={items} deleteItem={deleteItem}/>\n     <Footer/>\n      </div>\n    )\n}\n\nexport default Saveditems\n\n\n","\n\nclass Auth{\n\n\n\n\n\n\ncheckAuthenticated()\n{\n\n\n    let token=localStorage.getItem(\"email\");\n\n    if(!token)\n    {\n    \n        return false;\n    }\n    else{\n    \n        return true;\n    }\n}\n\n\n\n\n\n\n\n}\n\n\nexport default new Auth();","import React from 'react';\n\nimport {Route,Redirect} from 'react-router-dom';\n\nimport auth from './auth';\n\nexport default function ProtectedRoute({component:Component,...rest}) {\n    return (\n        <Route\n        {...rest}\n        render={\n\n  props=>{\n\n if( auth.checkAuthenticated())\n {\n return <Component {...props}/>\n }\n\n else{\n\n\n     return(\n\n<Redirect\nto={{\n pathname:\"/\",\n\n state:{\n     from:props.location\n }\n\n\n\n\n}}\n\n\n\n/>\n      )\n\n\n\n\n }\n\n\n\n  }\n\n\n        }\n        \n        \n        \n        \n        \n        />\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom'\nimport Saveditems from './Saveditems';\nimport ProtectedRoute from './ProtectedRoute';\n\nconst routing = (\n  <Router>\n    <div>\n      <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route exact path=\"/projectFiveMakeup\" component={App} />\n      <ProtectedRoute exact path=\"/saveditems\" component={Saveditems} />\n      </Switch>\n     \n    \n    </div>\n  </Router>\n)\nReactDOM.render(routing, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}